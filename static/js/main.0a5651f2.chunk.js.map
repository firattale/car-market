{"version":3,"sources":["api/api.js","app/asyncActions.js","app/carsSlice.js","helpers/helpers.js","components/FilterForm/FilterForm.js","components/Card/Card.js","commons/Pagination/Pagination.js","commons/Skeleton/SkeletonCard.js","components/CarList/CarList.js","components/Home/Home.js","components/Details/Details.js","components/Page404/Page404.js","commons/Header/Header.js","commons/Footer/Footer.js","commons/Alert/Alert.js","components/App/App.js","app/store.js","serviceWorker.js","index.js","commons/Header/logo.png"],"names":["api","axios","create","baseURL","timeout","fetchColors","createAsyncThunk","a","get","response","data","fetchManufacturers","fetchCars","params","fetchCarDetail","stockNumber","carsSlice","createSlice","name","initialState","colors","isLoaded","manufacturers","cars","totalPageCount","totalCarsCount","loading","carDetail","currentPage","manufacturer","color","error","reducers","incrementPage","state","decrementPage","changePage","action","payload","changeColor","changeManufacturer","clearCarDetail","extraReducers","fulfilled","rejected","pending","car","actions","selectError","selectColors","selectManufacturers","selectCars","selectCurrentPage","selectManufacturer","selectCarDetail","selectColor","capitalize","str","charAt","toUpperCase","slice","FilterForm","dispatch","useDispatch","colorOptions","useSelector","manuOptions","className","initialValues","undefined","onSubmit","values","page","handleSubmit","handleChange","Form","Group","controlId","onChange","Label","Control","as","value","map","option","key","Button","type","size","CarCard","pictureUrl","modelName","fuelType","number","mileage","CardGroup","Card","src","alt","Body","Title","Text","to","Pagination","isFirstPage","isLastPage","cx","onClick","SkeletonCard","Array","fill","el","i","style","paddingBottom","paddingTop","width","height","CarList","length","Home","useEffect","Details","id","useParams","isFav","localStorage","getItem","details","useState","fav","setFav","removeItem","setItem","Page404","logo","data-testid","Header","Footer","AlertComponent","variant","show","setShow","setTimeout","Alert","transition","onClose","App","path","exact","configureStore","reducer","carsReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0a5651f2.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'https://auto1-mock-server.herokuapp.com/api/';\n\nconst api = () => {\n  const instance = axios.create({ baseURL, timeout: 30000 });\n  return instance;\n};\n\nexport default api;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../api/api';\n\nexport const fetchColors = createAsyncThunk(\n  'cars/fetchColors',\n  async () => {\n    const response = await api().get('/colors');\n    return response.data;\n  }\n);\nexport const fetchManufacturers = createAsyncThunk(\n  'cars/fetchManufacturers',\n  async () => {\n    const response = await api().get('/manufacturers');\n    return response.data;\n  }\n);\nexport const fetchCars = createAsyncThunk(\n  'cars/fetchCars',\n  async (params) => {\n    const response = await api().get('/cars', {\n      params\n    });\n    return response.data;\n  }\n);\n\nexport const fetchCarDetail = createAsyncThunk(\n  'cars/fetchCarDetail',\n  async (stockNumber) => {\n    const response = await api().get(`/cars/${stockNumber}`);\n    return response.data;\n  }\n);\n","import { createSlice } from '@reduxjs/toolkit';\nimport { fetchColors, fetchManufacturers, fetchCars, fetchCarDetail } from './asyncActions';\n\nexport const initialState = {\n  colors: {\n    data: [],\n    isLoaded: false\n  },\n  manufacturers: {\n    data: [],\n    isLoaded: false\n  },\n  cars: {\n    data: [],\n    totalPageCount: 100,\n    totalCarsCount: 1000,\n    loading: false,\n    isLoaded: false\n  },\n  carDetail: {},\n  currentPage: 1,\n  manufacturer: null,\n  color: null,\n  error: null\n};\n\nexport const carsSlice = createSlice({\n  name: 'cars',\n  initialState,\n  reducers: {\n    incrementPage: (state) => {\n      state.currentPage++;\n    },\n    decrementPage: (state) => {\n      state.currentPage--;\n    },\n    changePage: (state, action) => {\n      state.currentPage = action.payload;\n    },\n    changeColor: (state, action) => {\n      state.color = action.payload;\n    },\n    changeManufacturer: (state, action) => {\n      state.manufacturer = action.payload;\n    },\n    clearCarDetail: (state, action) => {\n      state.carDetail = {};\n    }\n  },\n  extraReducers: {\n    [fetchColors.fulfilled]: (state, action) => {\n      state.colors.data = action.payload.colors;\n      state.colors.isLoaded = true;\n    },\n    [fetchColors.rejected]: (state) => {\n      state.error = 'Something went wrong! Please refresh the page.';\n      state.colors.isLoaded = true;\n    },\n    [fetchManufacturers.fulfilled]: (state, action) => {\n      state.manufacturers.data = action.payload.manufacturers;\n      state.manufacturers.isLoaded = true;\n    },\n    [fetchManufacturers.rejected]: (state) => {\n      state.error = 'Something went wrong! Please refresh the page.';\n      state.manufacturers.isLoaded = false;\n    },\n    [fetchCars.pending]: (state) => {\n      state.cars.loading = true;\n    },\n    [fetchCars.fulfilled]: (state, action) => {\n      state.cars.data = action.payload.cars;\n      state.cars.totalCarsCount = action.payload.totalCarsCount;\n      state.cars.totalPageCount = action.payload.totalPageCount;\n      state.cars.loading = false;\n      state.cars.isLoaded = true;\n    },\n    [fetchCars.rejected]: (state) => {\n      state.cars.data = [];\n      state.cars.loading = false;\n      state.cars.isLoaded = false;\n      state.error = 'Something went wrong! Please refresh the page.';\n    },\n    [fetchCarDetail.fulfilled]: (state, action) => {\n      state.carDetail = action.payload.car;\n    },\n    [fetchCarDetail.rejected]: (state) => {\n      state.carDetail.data = {};\n      state.error = 'Something went wrong! Please refresh the page.';\n    }\n  }\n});\n\nexport const { incrementPage, decrementPage, changePage, changeColor, changeManufacturer, clearCarDetail } = carsSlice.actions;\n\nexport const selectError = state => state.cars.error;\nexport const selectColors = state => state.cars.colors;\nexport const selectManufacturers = state => state.cars.manufacturers;\nexport const selectCars = state => state.cars.cars;\nexport const selectCurrentPage = state => state.cars.currentPage;\nexport const selectManufacturer = state => state.cars.manufacturer;\nexport const selectCarDetail = state => state.cars.carDetail;\nexport const selectColor = state => state.cars.color;\n\nexport default carsSlice.reducer;\n","export const capitalize = (str) => {\n  if (typeof str !== 'string') return '';\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { selectColors, selectManufacturers, changeColor, changeManufacturer } from '../../app/carsSlice';\nimport { fetchCars } from '../../app/asyncActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport Button from '@material-ui/core/Button';\nimport './FilterForm.scss';\nimport { capitalize } from '../../helpers/helpers';\n\nconst FilterForm = () => {\n  const dispatch = useDispatch();\n  const colorOptions = useSelector(selectColors);\n  const manuOptions = useSelector(selectManufacturers);\n  return (\n    <div className=\"form-container\">\n      <Formik\n        initialValues={{\n          color: undefined,\n          manufacturer: undefined\n        }}\n        onSubmit={async (values) => {\n          dispatch(changeColor(values.color));\n          dispatch(changeManufacturer(values.manufacturer));\n          dispatch(fetchCars({ ...values, page: 1 }));\n        }}\n      >\n        {({ handleSubmit, handleChange }) => (\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"color\" onChange={handleChange}>\n              <Form.Label>Color</Form.Label>\n              <Form.Control as=\"select\">\n                <option value='' >All Car Colors</option>\n                { colorOptions.data.map(option => <option key={option} value={option}>{capitalize(option)}</option>)}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"manufacturer\" onChange={handleChange}>\n              <Form.Label>Manufacturer</Form.Label>\n              <Form.Control as=\"select\">\n                <option value=''>All Manufacturers</option>\n                {manuOptions.data.map(option => <option key={option.name} value={option.name}>{option.name}</option>)}\n              </Form.Control>\n            </Form.Group>\n            <div className=\"d-flex justify-content-end\"><Button type=\"submit\" className=\"form-button\" size=\"small\">Filter</Button></div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default FilterForm;\n","import React from 'react';\nimport { Card, CardGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CarCard = ({ car: { stockNumber, pictureUrl, modelName, fuelType, mileage: { number }, color } }) => {\n  return (\n    <CardGroup>\n      <Card className=\"d-flex align-items-center\">\n        <div><img src={pictureUrl} className=\"card-image\" alt=\"Car Logo\"></img></div>\n        <Card.Body>\n          <Card.Title><h1>{modelName}</h1></Card.Title>\n          <Card.Text>Stock - # {stockNumber} - {number} KM - {fuelType} - {color}</Card.Text>\n          <Card.Text><Link to={`details/${stockNumber}`} className=\"details\">View Details</Link></Card.Text>\n        </Card.Body>\n      </Card>\n    </CardGroup>\n  );\n};\n\nexport default CarCard;\n\nCarCard.propTypes = {\n  car: PropTypes.shape({\n    color: PropTypes.string,\n    mileage: PropTypes.shape({\n      number: PropTypes.number\n    }),\n    fuelType: PropTypes.string,\n    modelName: PropTypes.string,\n    pictureUrl: PropTypes.string,\n    stockNumber: PropTypes.number\n  })\n};\n","import React from 'react';\nimport cx from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectCars, selectCurrentPage, incrementPage, decrementPage, changePage, selectManufacturer, selectColor } from '../../app/carsSlice';\nimport { fetchCars } from '../../app/asyncActions';\n\nconst Pagination = () => {\n  const cars = useSelector(selectCars);\n  const currentPage = useSelector(selectCurrentPage);\n  const manufacturer = useSelector(selectManufacturer);\n  const color = useSelector(selectColor);\n  const { totalPageCount } = cars;\n  const dispatch = useDispatch();\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPageCount;\n  const onNextClickHandler = () => {\n    !isLastPage && dispatch(incrementPage());\n    const params = {\n      manufacturer,\n      page: currentPage + 1,\n      color\n    };\n    !isLastPage && dispatch(fetchCars(params));\n  };\n  const onPreviousClickHandler = () => {\n    !isFirstPage && dispatch(decrementPage());\n    const params = {\n      manufacturer,\n      page: currentPage - 1,\n      color\n    };\n    !isFirstPage && dispatch(fetchCars(params));\n  };\n  const onFirstClickHandler = () => {\n    !isFirstPage && dispatch(changePage(1));\n    const params = {\n      manufacturer,\n      page: 1,\n      color\n    };\n    !isFirstPage && dispatch(fetchCars(params));\n  };\n\n  const onLastClickHandler = () => {\n    !isLastPage && dispatch(changePage(totalPageCount));\n    const params = {\n      manufacturer,\n      page: totalPageCount,\n      color\n    };\n    !isLastPage && dispatch(fetchCars(params));\n  };\n  return (\n    <div className=\"d-flex justify-content-center mt-3 mb-3\">\n      <span className={cx({ 'pag-button': !isFirstPage, 'page-count': isFirstPage })} onClick={onFirstClickHandler}>First</span>\n      <span className={cx({ 'pag-button': !isFirstPage, 'page-count': isFirstPage })} onClick={onPreviousClickHandler}>Previous</span>\n      <span className=\"page-count\">Page {currentPage} of {totalPageCount}</span>\n      <span className={cx({ 'pag-button': !isLastPage, 'page-count': isLastPage })} onClick={onNextClickHandler}>Next</span>\n      <span className={cx({ 'pag-button': !isLastPage, 'page-count': isLastPage })} onClick={onLastClickHandler}>Last</span>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { Card, CardGroup } from 'react-bootstrap';\nimport Skeleton from 'react-loading-skeleton';\n\nconst SkeletonCard = () => {\n  return new Array(10).fill(0).map((el, i) => (\n    <CardGroup key={i} >\n      <Card style={{ paddingBottom: '16px', paddingTop: '16px' }}>\n        <Skeleton width={104} height={90}/>\n        <Card.Body className=\"d-flex flex-column ml-3\">\n          <Skeleton width={95} height={28} />\n          <Skeleton width={170} height={28} />\n          <Skeleton width={100} height={28} />\n        </Card.Body>\n      </Card>\n    </CardGroup>\n  ));\n};\n\nexport default SkeletonCard;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectCars } from '../../app/carsSlice';\nimport CarCard from '../Card/Card';\nimport './CarList.scss';\nimport Pagination from '../../commons/Pagination/Pagination';\nimport SkeletonCard from '../../commons/Skeleton/SkeletonCard';\n\nconst CarList = () => {\n  const cars = useSelector(selectCars);\n  return (\n    <div className=\"list-container\">\n      <h1>Available Cars</h1>\n      <p>Showing {cars.data.length || 10} of {cars.totalCarsCount} Results</p>\n      <div>{cars.data.length > 0 ? cars.data.map(car => <CarCard key={car.mileage.number} car={car} />) : <SkeletonCard/> }</div>\n      <Pagination/>\n    </div>\n  );\n};\n\nexport default CarList;\n","import React, { useEffect } from 'react';\nimport { fetchColors, fetchManufacturers, fetchCars } from '../../app/asyncActions';\nimport { selectColors, selectManufacturers, selectCars } from '../../app/carsSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FilterForm from '../FilterForm/FilterForm';\nimport CarList from '../CarList/CarList';\nimport './Home.scss';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const colors = useSelector(selectColors);\n  const manufacturers = useSelector(selectManufacturers);\n  const cars = useSelector(selectCars);\n\n  useEffect(() => {\n    const params = {\n      page: 1\n    };\n    !colors.isLoaded && dispatch(fetchColors());\n    !manufacturers.isLoaded && dispatch(fetchManufacturers());\n    !cars.isLoaded && dispatch(fetchCars(params));\n  }, []\n  );\n  return <div className=\"home-content\">\n    <FilterForm/>\n    <CarList/>\n  </div>;\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCarDetail } from '../../app/asyncActions';\nimport { selectCarDetail, clearCarDetail } from '../../app/carsSlice';\nimport './details.scss';\nimport Skeleton from 'react-loading-skeleton';\nimport { Card, CardGroup } from 'react-bootstrap';\nimport Button from '@material-ui/core/Button';\nimport { capitalize } from '../../helpers/helpers';\n\nconst Details = () => {\n  useEffect(() => {\n    dispatch(fetchCarDetail(id));\n    return () => {\n      dispatch(clearCarDetail());\n    };\n  }, []\n  );\n  const { id } = useParams();\n  const isFav = localStorage.getItem(id);\n  const details = useSelector(selectCarDetail);\n  const dispatch = useDispatch();\n  const [fav, setFav] = useState(isFav);\n\n  const onSaveHandler = () => {\n    if (fav) {\n      setFav(false);\n      localStorage.removeItem(id);\n    } else {\n      setFav(true);\n      localStorage.setItem(id, true);\n    }\n  };\n  return (\n    <div className=\"details-page-content\">\n      <div className=\"w-100 text-center\">\n        {details.pictureUrl ? <img src={details.pictureUrl} alt=\"Car Logo\"></img> : <Skeleton width={300} height={260} className=\"m-0\" />}\n      </div>\n      <div className=\"content-container\">\n        <CardGroup>\n          <Card className=\"d-flex align-items-center\">\n            <Card.Body>\n              <Card.Title><h1>{ details.modelName || <Skeleton className=\"m-0\" width={100} />}</h1></Card.Title>\n              <Card.Text>Stock #{\" \"}\n                {details.stockNumber ? `${details.stockNumber} - ${details?.mileage?.number} KM - ${details.fuelType} - ${capitalize(details.color)}` : <Skeleton className=\"m-0\" width={150} />}\n              </Card.Text>\n              <Card.Text className=\"detail-text\">This car is currently available and can be delivered as soon as tomorrow morning. Please be aware that delivery times shown in this page are not definitive and may change due to bad weather conditions.</Card.Text>\n            </Card.Body>\n          </Card>\n        </CardGroup>\n        <CardGroup>\n          <Card className=\"d-flex align-items-center\">\n            <Card.Body>\n              <Card.Text>If you like this car, click the button and save it in your collection of favourite items.</Card.Text>\n              <div className=\"d-flex justify-content-end\"><Button type=\"submit\" className=\"form-button mt-2\" size=\"small\" onClick={onSaveHandler}>{isFav ? 'UnSave' : 'Save'}</Button></div>\n            </Card.Body>\n          </Card>\n        </CardGroup>\n      </div>\n    </div>\n  );\n};\n\nexport default Details;\n","import React from 'react';\nimport './Page404.scss';\nimport logo from '../../commons/Header/logo.png';\nimport { Link } from 'react-router-dom';\n\nconst Page404 = () => (\n  <>\n    <div className=\"page-content\">\n      <img src={logo} alt=\"Auto1 Logo\" className='nav-logo' data-testid=\"logo-image\" />\n      <h1>404 - Not Found</h1>\n      <p>Sorry, the page you are looking for does not exist.</p>\n      <p>You can always go back to the <Link to=\"/\" data-testid=\"homepage-nav\">homepage</Link>.</p>\n    </div>\n  </>\n);\n\nexport default Page404;\n","import React from 'react';\nimport logo from './logo.png';\nimport './Header.scss';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <nav className='d-flex align-items-center justify-content-between nav'>\n      <Link to=\"/\"><img src={logo} data-testid=\"logo-image\" alt=\"Auto1 Logo\" className='nav-logo' /></Link>\n      <ul className='nav-links'>\n        <li>Purchase</li>\n        <li>My Orders</li>\n        <li>Sell</li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './Footer.scss';\n\nconst Footer = (params) => (\n  <footer>\n    <span>&#169; AUTO1 Group 2018</span>\n  </footer>\n)\n\n;\n\nexport default Footer;\n","import { Alert } from 'react-bootstrap';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Alert.scss';\n\nconst AlertComponent = ({ variant, error }) => {\n  const [show, setShow] = useState(true);\n  setTimeout(() => {\n    setShow(false);\n  }, 3000);\n  if (show) {\n    return (\n      <Alert transition={true} variant={variant} onClose={() => setShow(false)} className=\"alert\" >\n        <p>\n          {error}\n        </p>\n      </Alert>\n    );\n  }\n  return null;\n};\n\nexport default AlertComponent;\n\nAlertComponent.propTypes = {\n  variant: PropTypes.string,\n  error: PropTypes.string\n};\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\nimport Home from '../Home/Home';\r\nimport Details from '../Details/Details';\r\nimport Page404 from '../Page404/Page404';\r\nimport './App.scss';\r\nimport Header from '../../commons/Header/Header';\r\nimport Footer from '../../commons/Footer/Footer';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectError } from '../../app/carsSlice';\r\nimport AlertComponent from '../../commons/Alert/Alert';\r\n\r\nexport const App = () => {\r\n  const error = useSelector(selectError);\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Header/>\r\n        {error && <div className=\"d-flex justify-content-center\"><AlertComponent variant=\"danger\" error={error}/></div>}\r\n        <Switch>\r\n          <Route path=\"/details/:id\">\r\n            <Details />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <Page404 />\r\n          </Route>\r\n        </Switch>\r\n        <Footer/>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport carsReducer from './carsSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    cars: carsReducer\r\n  }\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n/* istanbul ignore file */\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/* istanbul ignore file */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/App/App';\r\nimport store from './app/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.fb20abff.png\";"],"sourceRoot":""}