{"version":3,"sources":["api/api.js","app/asyncActions.js","app/carsSlice.js","commons/Header/logo.png","commons/Header/Header.js","commons/Footer/Footer.js","commons/Alert/Alert.js","components/App/App.js","app/store.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","timeout","fetchColors","createAsyncThunk","a","get","response","data","fetchManufacturers","fetchCars","params","fetchCarDetail","stockNumber","carsSlice","createSlice","name","initialState","colors","isLoaded","manufacturers","cars","totalPageCount","totalCarsCount","loading","carDetail","currentPage","manufacturer","sorting","color","error","reducers","incrementPage","state","decrementPage","changePage","action","payload","changeColor","changeManufacturer","changeSorting","clearCarDetail","extraReducers","fulfilled","rejected","pending","car","actions","selectError","selectColors","selectManufacturers","selectCars","selectCurrentPage","selectManufacturer","selectCarDetail","selectColor","selectSorting","module","exports","Header","className","to","src","logo","data-testid","alt","Footer","AlertComponent","variant","useState","show","setShow","setTimeout","Alert","transition","onClose","Details","lazy","Home","Page404","App","useSelector","basename","process","fallback","path","exact","configureStore","reducer","carsReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1476503a.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'https://auto1-mock-server.herokuapp.com/api/';\n\nconst api = () => {\n  const instance = axios.create({ baseURL, timeout: 30000 });\n  return instance;\n};\n\nexport default api;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../api/api';\n\nexport const fetchColors = createAsyncThunk(\n  'cars/fetchColors',\n  async () => {\n    const response = await api().get('/colors');\n    return response.data;\n  }\n);\nexport const fetchManufacturers = createAsyncThunk(\n  'cars/fetchManufacturers',\n  async () => {\n    const response = await api().get('/manufacturers');\n    return response.data;\n  }\n);\nexport const fetchCars = createAsyncThunk(\n  'cars/fetchCars',\n  async (params) => {\n    const response = await api().get('/cars', {\n      params\n    });\n    return response.data;\n  }\n);\n\nexport const fetchCarDetail = createAsyncThunk(\n  'cars/fetchCarDetail',\n  async (stockNumber) => {\n    const response = await api().get(`/cars/${stockNumber}`);\n    return response.data;\n  }\n);\n","import { createSlice } from '@reduxjs/toolkit';\nimport { fetchColors, fetchManufacturers, fetchCars, fetchCarDetail } from './asyncActions';\n\nexport const initialState = {\n  colors: {\n    data: [],\n    isLoaded: false\n  },\n  manufacturers: {\n    data: [],\n    isLoaded: false\n  },\n  cars: {\n    data: [],\n    totalPageCount: 100,\n    totalCarsCount: 1000,\n    loading: false,\n    isLoaded: false\n  },\n  carDetail: {},\n  currentPage: 1,\n  manufacturer: null,\n  sorting: null,\n  color: null,\n  error: null\n};\n\nexport const carsSlice = createSlice({\n  name: 'cars',\n  initialState,\n  reducers: {\n    incrementPage: (state) => {\n      state.currentPage++;\n    },\n    decrementPage: (state) => {\n      state.currentPage--;\n    },\n    changePage: (state, action) => {\n      state.currentPage = action.payload;\n    },\n    changeColor: (state, action) => {\n      state.color = action.payload;\n    },\n    changeManufacturer: (state, action) => {\n      state.manufacturer = action.payload;\n    },\n    changeSorting: (state, action) => {\n      state.sorting = action.payload;\n    },\n    clearCarDetail: (state, action) => {\n      state.carDetail = {};\n    }\n  },\n  extraReducers: {\n    [fetchColors.fulfilled]: (state, action) => {\n      state.colors.data = action.payload.colors;\n      state.colors.isLoaded = true;\n    },\n    [fetchColors.rejected]: (state) => {\n      state.error = 'Something went wrong! Please refresh the page.';\n      state.colors.isLoaded = true;\n    },\n    [fetchManufacturers.fulfilled]: (state, action) => {\n      state.manufacturers.data = action.payload.manufacturers;\n      state.manufacturers.isLoaded = true;\n    },\n    [fetchManufacturers.rejected]: (state) => {\n      state.error = 'Something went wrong! Please refresh the page.';\n      state.manufacturers.isLoaded = false;\n    },\n    [fetchCars.pending]: (state) => {\n      state.cars.loading = true;\n    },\n    [fetchCars.fulfilled]: (state, action) => {\n      state.cars.data = action.payload.cars;\n      state.cars.totalCarsCount = action.payload.totalCarsCount;\n      state.cars.totalPageCount = action.payload.totalPageCount;\n      state.cars.loading = false;\n      state.cars.isLoaded = true;\n    },\n    [fetchCars.rejected]: (state) => {\n      state.cars.data = [];\n      state.cars.loading = false;\n      state.cars.isLoaded = false;\n      state.error = 'Something went wrong! Please refresh the page.';\n    },\n    [fetchCarDetail.fulfilled]: (state, action) => {\n      state.carDetail = action.payload.car;\n    },\n    [fetchCarDetail.rejected]: (state) => {\n      state.carDetail.data = {};\n      state.error = 'Something went wrong! Please refresh the page.';\n    }\n  }\n});\n\nexport const { incrementPage, decrementPage, changePage, changeColor, changeManufacturer, clearCarDetail, changeSorting } = carsSlice.actions;\n\nexport const selectError = state => state.cars.error;\nexport const selectColors = state => state.cars.colors;\nexport const selectManufacturers = state => state.cars.manufacturers;\nexport const selectCars = state => state.cars.cars;\nexport const selectCurrentPage = state => state.cars.currentPage;\nexport const selectManufacturer = state => state.cars.manufacturer;\nexport const selectCarDetail = state => state.cars.carDetail;\nexport const selectColor = state => state.cars.color;\nexport const selectSorting = state => state.cars.sorting;\n\nexport default carsSlice.reducer;\n","module.exports = __webpack_public_path__ + \"static/media/logo.fb20abff.png\";","import React from 'react';\nimport logo from './logo.png';\nimport './Header.scss';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <nav className='d-flex align-items-center justify-content-between nav'>\n      <Link to=\"/\"><img src={logo} data-testid=\"logo-image\" alt=\"Auto1 Logo\" className='nav-logo' /></Link>\n      <ul className='nav-links'>\n        <li>Purchase</li>\n        <li>My Orders</li>\n        <li>Sell</li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './Footer.scss';\n\nconst Footer = (params) => (\n  <footer>\n    <span>&#169; AUTO1 Group 2018</span>\n  </footer>\n)\n\n;\n\nexport default Footer;\n","import { Alert } from 'react-bootstrap';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Alert.scss';\n\nconst AlertComponent = ({ variant, error }) => {\n  const [show, setShow] = useState(true);\n  setTimeout(() => {\n    setShow(false);\n  }, 3000);\n  if (show) {\n    return (\n      <Alert transition={true} variant={variant} onClose={() => setShow(false)} className=\"alert\" >\n        <p>\n          {error}\n        </p>\n      </Alert>\n    );\n  }\n  return null;\n};\n\nexport default AlertComponent;\n\nAlertComponent.propTypes = {\n  variant: PropTypes.string,\n  error: PropTypes.string\n};\n","import React, { Suspense, lazy } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\nimport './App.scss';\r\nimport Header from '../../commons/Header/Header';\r\nimport Footer from '../../commons/Footer/Footer';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectError } from '../../app/carsSlice';\r\nimport AlertComponent from '../../commons/Alert/Alert';\r\n\r\nconst Details = lazy(() => import('../../routes/Details/Details'));\r\nconst Home = lazy(() => import('../../routes/Home/Home'));\r\nconst Page404 = lazy(() => import('../../routes/Page404/Page404'));\r\n\r\nexport const App = () => {\r\n  const error = useSelector(selectError);\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <div className=\"app\">\r\n        <Suspense fallback={<div></div>}>\r\n          <Header />\r\n          {error && <div className=\"d-flex justify-content-center\"><AlertComponent variant=\"danger\" error={error} /></div>}\r\n          <Switch>\r\n            <Route path=\"/details/:id\">\r\n              <Details />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <Page404 />\r\n            </Route>\r\n          </Switch>\r\n          <Footer />\r\n        </Suspense>\r\n\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport carsReducer from './carsSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    cars: carsReducer\r\n  }\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n/* istanbul ignore file */\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/* istanbul ignore file */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/App/App';\r\nimport store from './app/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}