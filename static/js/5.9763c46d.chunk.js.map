{"version":3,"sources":["components/FilterForm/FilterForm.js","components/Card/Card.js","commons/Pagination/Pagination.js","commons/Skeleton/SkeletonCard.js","components/CarList/CarList.js","routes/Home/Home.js","helpers/helpers.js"],"names":["FilterForm","dispatch","useDispatch","colorOptions","useSelector","selectColors","manuOptions","selectManufacturers","className","initialValues","color","undefined","manufacturer","onSubmit","values","a","changeColor","changeManufacturer","fetchCars","page","handleSubmit","handleChange","Form","Group","controlId","onChange","Label","Control","as","value","data","map","option","key","capitalize","name","Button","type","size","CarCard","car","stockNumber","pictureUrl","modelName","fuelType","number","mileage","CardGroup","Card","src","alt","Body","Title","Text","to","Pagination","cars","selectCars","currentPage","selectCurrentPage","selectManufacturer","selectColor","totalPageCount","isFirstPage","isLastPage","cx","onClick","changePage","params","decrementPage","incrementPage","SkeletonCard","Array","fill","el","i","style","paddingBottom","paddingTop","width","height","CarList","length","totalCarsCount","Home","colors","manufacturers","useEffect","isLoaded","fetchColors","fetchManufacturers","str","charAt","toUpperCase","slice"],"mappings":"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","file":"static/js/5.9763c46d.chunk.js","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport { selectColors, selectManufacturers, changeColor, changeManufacturer } from '../../app/carsSlice';\nimport { fetchCars } from '../../app/asyncActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport Button from '@material-ui/core/Button';\nimport './FilterForm.scss';\nimport { capitalize } from '../../helpers/helpers';\n\nconst FilterForm = () => {\n  const dispatch = useDispatch();\n  const colorOptions = useSelector(selectColors);\n  const manuOptions = useSelector(selectManufacturers);\n  return (\n    <div className=\"form-container\">\n      <Formik\n        initialValues={{\n          color: undefined,\n          manufacturer: undefined\n        }}\n        onSubmit={async (values) => {\n          dispatch(changeColor(values.color));\n          dispatch(changeManufacturer(values.manufacturer));\n          dispatch(fetchCars({ ...values, page: 1 }));\n        }}\n      >\n        {({ handleSubmit, handleChange }) => (\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"color\" onChange={handleChange}>\n              <Form.Label>Color</Form.Label>\n              <Form.Control as=\"select\">\n                <option value='' >All Car Colors</option>\n                { colorOptions.data.map(option => <option key={option} value={option}>{capitalize(option)}</option>)}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"manufacturer\" onChange={handleChange}>\n              <Form.Label>Manufacturer</Form.Label>\n              <Form.Control as=\"select\">\n                <option value=''>All Manufacturers</option>\n                {manuOptions.data.map(option => <option key={option.name} value={option.name}>{option.name}</option>)}\n              </Form.Control>\n            </Form.Group>\n            <div className=\"d-flex justify-content-end\"><Button type=\"submit\" className=\"form-button\" size=\"small\">Filter</Button></div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default FilterForm;\n","import React from 'react';\nimport { Card, CardGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CarCard = ({ car: { stockNumber, pictureUrl, modelName, fuelType, mileage: { number }, color } }) => {\n  return (\n    <CardGroup>\n      <Card className=\"d-flex align-items-center\">\n        <div><img src={pictureUrl} className=\"card-image\" alt=\"Car Logo\"></img></div>\n        <Card.Body>\n          <Card.Title><h1>{modelName}</h1></Card.Title>\n          <Card.Text>Stock - # {stockNumber} - {number} KM - {fuelType} - {color}</Card.Text>\n          <Card.Text><Link to={`details/${stockNumber}`} className=\"details\">View Details</Link></Card.Text>\n        </Card.Body>\n      </Card>\n    </CardGroup>\n  );\n};\n\nexport default CarCard;\n\nCarCard.propTypes = {\n  car: PropTypes.shape({\n    color: PropTypes.string,\n    mileage: PropTypes.shape({\n      number: PropTypes.number\n    }),\n    fuelType: PropTypes.string,\n    modelName: PropTypes.string,\n    pictureUrl: PropTypes.string,\n    stockNumber: PropTypes.number\n  })\n};\n","import React from 'react';\nimport cx from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectCars, selectCurrentPage, incrementPage, decrementPage, changePage, selectManufacturer, selectColor } from '../../app/carsSlice';\nimport { fetchCars } from '../../app/asyncActions';\n\nconst Pagination = () => {\n  const cars = useSelector(selectCars);\n  const currentPage = useSelector(selectCurrentPage);\n  const manufacturer = useSelector(selectManufacturer);\n  const color = useSelector(selectColor);\n  const { totalPageCount } = cars;\n  const dispatch = useDispatch();\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPageCount;\n  const onNextClickHandler = () => {\n    !isLastPage && dispatch(incrementPage());\n    const params = {\n      manufacturer,\n      page: currentPage + 1,\n      color\n    };\n    !isLastPage && dispatch(fetchCars(params));\n  };\n  const onPreviousClickHandler = () => {\n    !isFirstPage && dispatch(decrementPage());\n    const params = {\n      manufacturer,\n      page: currentPage - 1,\n      color\n    };\n    !isFirstPage && dispatch(fetchCars(params));\n  };\n  const onFirstClickHandler = () => {\n    !isFirstPage && dispatch(changePage(1));\n    const params = {\n      manufacturer,\n      page: 1,\n      color\n    };\n    !isFirstPage && dispatch(fetchCars(params));\n  };\n\n  const onLastClickHandler = () => {\n    !isLastPage && dispatch(changePage(totalPageCount));\n    const params = {\n      manufacturer,\n      page: totalPageCount,\n      color\n    };\n    !isLastPage && dispatch(fetchCars(params));\n  };\n  return (\n    <div className=\"d-flex justify-content-center mt-3 mb-3\">\n      <span className={cx({ 'pag-button': !isFirstPage, 'page-count': isFirstPage })} onClick={onFirstClickHandler}>First</span>\n      <span className={cx({ 'pag-button': !isFirstPage, 'page-count': isFirstPage })} onClick={onPreviousClickHandler}>Previous</span>\n      <span className=\"page-count\">Page {currentPage} of {totalPageCount}</span>\n      <span className={cx({ 'pag-button': !isLastPage, 'page-count': isLastPage })} onClick={onNextClickHandler}>Next</span>\n      <span className={cx({ 'pag-button': !isLastPage, 'page-count': isLastPage })} onClick={onLastClickHandler}>Last</span>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { Card, CardGroup } from 'react-bootstrap';\nimport Skeleton from 'react-loading-skeleton';\n\nconst SkeletonCard = () => {\n  return new Array(10).fill(0).map((el, i) => (\n    <CardGroup key={i} >\n      <Card style={{ paddingBottom: '16px', paddingTop: '16px' }}>\n        <Skeleton width={104} height={90}/>\n        <Card.Body className=\"d-flex flex-column ml-3\">\n          <Skeleton width={95} height={28} />\n          <Skeleton width={170} height={28} />\n          <Skeleton width={100} height={28} />\n        </Card.Body>\n      </Card>\n    </CardGroup>\n  ));\n};\n\nexport default SkeletonCard;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectCars } from '../../app/carsSlice';\nimport CarCard from '../Card/Card';\nimport './CarList.scss';\nimport Pagination from '../../commons/Pagination/Pagination';\nimport SkeletonCard from '../../commons/Skeleton/SkeletonCard';\n\nconst CarList = () => {\n  const cars = useSelector(selectCars);\n  return (\n    <div className=\"list-container\">\n      <h1>Available Cars</h1>\n      <p>Showing {cars.data.length || 10} of {cars.totalCarsCount} Results</p>\n      <div>{cars.data.length > 0 ? cars.data.map(car => <CarCard key={car.mileage.number} car={car} />) : <SkeletonCard/> }</div>\n      <Pagination/>\n    </div>\n  );\n};\n\nexport default CarList;\n","import React, { useEffect } from 'react';\nimport { fetchColors, fetchManufacturers, fetchCars } from '../../app/asyncActions';\nimport { selectColors, selectManufacturers, selectCars } from '../../app/carsSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FilterForm from '../../components/FilterForm/FilterForm';\nimport CarList from '../../components/CarList/CarList';\nimport './Home.scss';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const colors = useSelector(selectColors);\n  const manufacturers = useSelector(selectManufacturers);\n  const cars = useSelector(selectCars);\n\n  useEffect(() => {\n    const params = {\n      page: 1\n    };\n    !colors.isLoaded && dispatch(fetchColors());\n    !manufacturers.isLoaded && dispatch(fetchManufacturers());\n    !cars.isLoaded && dispatch(fetchCars(params));\n  }, []\n  );\n  return <div className=\"home-content\">\n    <FilterForm/>\n    <CarList/>\n  </div>;\n};\n\nexport default Home;\n","export const capitalize = (str) => {\n  if (typeof str !== 'string') return '';\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n"],"sourceRoot":""}